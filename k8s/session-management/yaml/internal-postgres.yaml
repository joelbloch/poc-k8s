
#################
#### STORAGE ####
#################
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: microk8s-hostpath
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: microk8s.io/hostpath
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv
  labels:
    app: postgres
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/host_mnt/d/data/postgres"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
################
#### CONFIG ####
################
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    type: config
    app: postgres
    tier: dbserver
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: admin123
  PGDATA: /var/lib/postgresql/data/pgdata
---
#############
#### APP ####
#############
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres     
    tier: dbserver
spec:
  type: NodePort
  ports:
  - port: 5432
    name: postgres
    nodePort: 30002
  selector:
    app: postgres
    tier: dbserver
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  serviceName: "postgres"
  selector:
    matchLabels:
      app: postgres
      tier: dbserver
  template:
    metadata:
      labels:
        app: postgres
        tier: dbserver
    spec:
      securityContext:
        runAsUser: 999
        supplementalGroups: [999, 1000]
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:12
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/bash", "-c"]        
          args: ["chown 999:999 -R /var/lib/postgresql && ./docker-entrypoint.sh postgres"]
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb             
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim